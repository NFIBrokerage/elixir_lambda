AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  S3Bucket:
    Type : "AWS::SSM::Parameter::Value<String>"
    Default: artifact-store
    Description: "The artifact store bucket"
  ErlangVersion:
    Type : String
    Description: "Erlang version of the runtime"
  ElixirVersion:
    Type : String
    Description: "Elixir version of the runtime"
  RuntimeZip:
    Type : String
    Description: "Name of the S3 artifact that points to the runtime zip fie"
  ExampleZip:
    Type : String
    Description: "Name of the S3 artifact that points to the lambda function zip fie"

Resources:
  ElixirRuntime:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: elixir-runtime
      Description: !Sub "Elixir ${ElixirVersion} / Erlang ${ErlangVersion} runtime layer for AWS Lambda"
      LicenseInfo: Apache License, Version 2
      Content:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref RuntimeZip

  ExampleFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: hackathon-counter
      Handler: Example.hello
      Runtime: provided
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref ExampleZip
      Description: Our custom Elixir function
      MemorySize: 128
      Timeout: 7
      Layers:
        - !Ref ElixirRuntime
      Role: !GetAtt FunctionRole.Arn

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
